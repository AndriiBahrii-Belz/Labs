#include <iostream>
#include <string>
using namespace std;

// Функція для імплікації p -> q
bool implication(bool p, bool q) {
    return !p || q;
}

// Основна програма
int main() {
    // Частина 1: Булеві операції для p та q
    bool p, q;

    // Введення значень p і q
    cout << "Введіть значення p (1 або 0): ";
    cin >> p;
    cout << "Введіть значення q (1 або 0): ";
    cin >> q;

    // Обчислення та виведення кон'юнкції (AND)
    cout << "Кон'юнкція (p AND q): " << (p && q) << endl;

    // Обчислення та виведення диз'юнкції (OR)
    cout << "Диз'юнкція (p OR q): " << (p || q) << endl;

    // Обчислення та виведення альтернативного «або» (XOR)
    cout << "Альтернативне 'або' (p XOR q): " << (p != q) << endl;

    // Обчислення та виведення імплікації (p -> q)
    cout << "Імплікація (p -> q): " << implication(p, q) << endl;

    // Обчислення та виведення імплікації (q -> p)
    cout << "Імплікація (q -> p): " << implication(q, p) << endl;

    // Обчислення та виведення еквівалентності (p <-> q)
    cout << "Еквівалентність (p <-> q): " << ((implication(p, q) && implication(q, p))) << endl;

    // Частина 2: Порозрядні операції для двох бітових рядків
    string a = "1100011100"; // Бітовий рядок 1
    string b = "1010101110"; // Бітовий рядок 2

    // Перевірка, чи рядки однакової довжини
    if (a.length() != b.length()) {
        cout << "Рядки мають бути однакової довжини." << endl;
        return 1;
    }

    // Знаходимо довжину рядків
    int n = a.length();

    // Ініціалізація результатів
    string x = "", y = "", z = "";

    // Основний цикл для порозрядних операцій
    for (int i = 0; i < n; i++) {
        // Виконуємо операцію OR
        if (a[i] == '1' || b[i] == '1') {
            x += '1';
        }
        else {
            x += '0';
        }

        // Виконуємо операцію AND
        if (a[i] == '1' && b[i] == '1') {
            y += '1';
        }
        else {
            y += '0';
        }

        // Виконуємо операцію XOR
        if (a[i] != b[i]) {
            z += '1';
        }
        else {
            z += '0';
        }
    }

    // Виведення результатів
    cout << "OR  результат: " << x << endl;
    cout << "AND результат: " << y << endl;
    cout << "XOR результат: " << z << endl;

    return 0;
}